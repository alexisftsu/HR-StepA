name: release-checksums

on:
  release:
    types: [published, edited]
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag to verify (e.g., HR-StepA-PartB-beta0.08-Delta1100)"
        required: true

jobs:
  build-sums:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        working-directory: HR-StepA
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_TAG: ${{ github.event.release.tag_name || github.event.inputs.tag }}
    steps:
      - name: Checkout (tag) con LFS
        uses: actions/checkout@v4
        with:
          ref: ${{ env.RELEASE_TAG }}
          lfs: true

      - name: Instalar jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Generar SHA256SUMS.txt
        run: |
          set -e
          test -f out/BEST_manifest.json || { echo "No existe out/BEST_manifest.json"; exit 1; }
          ASSETS_FROM_MANIFEST=$(jq -r '.assets.best_zip, .assets.inputs_zip, .assets.lemma_pdf' out/BEST_manifest.json)
          EXTRAS="out/BEST_summary.txt"
          CSV_GLOB="out/summary_sweep_beta*.csv"
          : > out/SHA256SUMS.txt
          for f in ${ASSETS_FROM_MANIFEST} ${EXTRAS}; do
            if [ -f "$f" ]; then
              sha256sum "$f" >> out/SHA256SUMS.txt
            else
              echo "WARN: falta $f" >&2
            fi
          done
          for f in $CSV_GLOB; do
            [ -f "$f" ] && sha256sum "$f" >> out/SHA256SUMS.txt || true
          done
          cat out/SHA256SUMS.txt

      - name: Subir SHA256SUMS.txt al release
        uses: softprops/action-gh-release@v2
        with:
          files: HR-StepA/out/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  verify-on-windows:
    runs-on: windows-latest
    needs: build-sums
    permissions:
      contents: read
    defaults:
      run:
        working-directory: HR-StepA
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_TAG: ${{ github.event.release.tag_name || github.event.inputs.tag }}
    steps:
      - name: Checkout (tag) con LFS
        uses: actions/checkout@v4
        with:
          ref: ${{ env.RELEASE_TAG }}
          lfs: true

      - name: Descargar SHA256SUMS.txt del release
        shell: pwsh
        run: |
          gh release download $env:RELEASE_TAG -p SHA256SUMS.txt -D out
          Get-ChildItem out

      - name: Verificar checksums con tu script
        shell: pwsh
        run: .\verify_release.ps1 -SumsPath .\out\SHA256SUMS.txt
