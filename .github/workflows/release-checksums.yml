name: release-checksums

on:
  release:
    types: [published, edited]
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag (e.g., HR-StepA-PartB-beta0.08-Delta1100)"
        required: true

jobs:
  build-sums:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - id: settag
        name: Compute tag
        run: |
          if [ -n "${{ github.event.release.tag_name }}" ]; then
            echo "tag=${{ github.event.release.tag_name }}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=${{ github.event.inputs.tag }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Download release assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          mkdir -p dl
          if ! gh release download "${{ steps.settag.outputs.tag }}" --repo "${{ github.repository }}" -D out 2>/dev/null; then echo "No assets found in this release, skipping checksum generation"; exit 0; fing "${{ steps.settag.outputs.tag }}" --repo "${{ github.repository }}" -D dl
          ls -la dl

      - name: Generate SHA256SUMS.txt (selected assets)
        run: |
          set -euo pipefail
          shopt -s nullglob
          files=()
          for pat in \
            "HR_Final_pkg_FINAL_BEST_*.zip" \
            "HR_Final_inputs_*.zip" \
            "*lemma*.pdf" \
            "BEST_summary.txt" \
            "summary_sweep_*.csv"
          do
            for f in dl/$pat; do files+=("$f"); done
          done

          if [ ${#files[@]} -eq 0 ]; then
            echo "No matching assets found in dl/"; ls -la dl; exit 1
          fi

          ( cd dl && sha256sum "${files[@]#dl/}" > SHA256SUMS.txt && cat SHA256SUMS.txt )

      - name: Upload SHA256SUMS.txt to release
        uses: softprops/action-gh-release@v2
        with:
          files: dl/SHA256SUMS.txt
          tag_name: ${{ steps.settag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  verify-on-windows:
    runs-on: windows-latest
    needs: build-sums
    steps:
      - id: settag
        name: Compute tag (pwsh)
        shell: pwsh
        run: |
          if ("${{ github.event.release.tag_name }}") {
            "tag=${{ github.event.release.tag_name }}" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          } else {
            "tag=${{ github.event.inputs.tag }}" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          }

      - name: Download assets (including SHA256SUMS.txt)
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $tag = "${{ steps.settag.outputs.tag }}"
          New-Item -ItemType Directory -Force dl | Out-Null
          if ! gh release download "${{ steps.settag.outputs.tag }}" --repo "${{ github.repository }}" -D out 2>/dev/null; then echo "No assets found in this release, skipping checksum generation"; exit 0; fing $tag --repo "${{ github.repository }}" -D dl
          Get-ChildItem dl | Sort-Object Name | Format-Table Name, Length

      - name: Verify checksums with Get-FileHash
        shell: pwsh
        run: |
          $sumsPath = ".\dl\SHA256SUMS.txt"
          if (!(Test-Path $sumsPath)) { throw "Missing $sumsPath" }
          $ok = $true
          foreach ($line in Get-Content $sumsPath) {
            if ($line -match '^([0-9A-Fa-f]{64})\s+\*?(.+)$') {
              $expected = $matches[1].ToLower()
              $file = Join-Path ".\dl" $matches[2]
              if (!(Test-Path $file)) { Write-Host "MISSING $file"; $ok = $false; continue }
              $actual = (Get-FileHash -Algorithm SHA256 $file).Hash.ToLower()
              if ($actual -ne $expected) { Write-Host "MISMATCH $file"; $ok = $false } else { Write-Host "OK $file" }
            }
          }
          if (-not $ok) { throw "Checksum verification failed" }



